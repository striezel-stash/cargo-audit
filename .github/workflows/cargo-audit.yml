name: cargo-audit

on:
  pull_request:
    paths:
      - ".github/workflows/cargo-audit.yml"
      - "cargo-audit/**"
      - "rustsec/**"
      - "Cargo.*"
  push:
    branches: main

defaults:
  run:
    working-directory: cargo-audit

env:
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
          #- windows-latest # TODO(tarcieri): debug Windows build timeouts
        toolchain:
          - 1.57.0 # MSRV
          - stable
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3.0.11
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
      - uses: actions/cache@v3.0.11
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
          override: true
      - run: cargo test --release
      - run: cargo test --all-features --release

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - run: cargo doc --all-features

# TODO(tarcieri): re-enable after vulnerable deps have been upgraded
#  self-audit:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          profile: minimal
#          override: true
#      - name: Run cargo audit
#        run: cargo run -- audit
